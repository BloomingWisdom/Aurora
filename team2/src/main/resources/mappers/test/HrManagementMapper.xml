<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 오라클 MyBatis 사용시 문장 끝에 세미콜론 있으면 오류남! -->

<mapper namespace="com.itwillbs.repository.HrManagementMapper">
<!--    <select id="selectTest" resultType="string">-->
<!--        SELECT -->
<!--        	  TO_CHAR(SYSDATE, 'yyyy-mm-dd')-->
<!--  		  FROM -->
<!--  			  dual-->
<!--    </select>-->
	
<!-- 	<select id="insertMember" > -->
<!-- 		INSERT INTO MEMBER VALUES ( -->
<!-- 			NULL -->
<!-- 			, #{} -->
<!-- 		) -->
<!-- 	</select> -->
    <select id="selectMemberList" resultType="map">
		SELECT

				TO_CHAR(m.JOIN_DATE, 'YYYY-MM-DD') AS JOIN_DATE,
				m.ID,
				m.NAME,
				m.PHONE,
				m.EMAIL,
				
				(SELECT d.NAME 
			       FROM DEPARTMENT d 
				  WHERE d.ID = dh.DEPARTMENT_ID) AS DEPARTMENT,
				  
				(SELECT g.NAME 
				   FROM GRADE g 
				  WHERE g.ID = gh.GRADE_ID) AS GRADE
				  
		  FROM MEMBER m 
	 LEFT JOIN DEPARTMENT_HISTORY dh 
										ON m.ID = dh.MEMBER_ID
	 LEFT JOIN GRADE_HISTORY gh 
										ON m.ID = gh.MEMBER_ID
        	   
    </select>
    <!--
    <select id="selectOrganizationData" resultType="map">
	SELECT JSON_OBJECT(
        'bankCodes' VALUE (
            SELECT JSON_ARRAYAGG(
                JSON_OBJECT('code' VALUE CODE, 'bankName' VALUE BANK_NAME)
            )
            FROM BANK_CODES
        ),
        'departments' VALUE (
            SELECT JSON_ARRAYAGG(
                JSON_OBJECT(
                    'id' VALUE ID,
                    'name' VALUE NAME,
                    'subDepartments' VALUE (
                        SELECT JSON_ARRAYAGG(
                            JSON_OBJECT(
                                'id' VALUE ID,
                                'name' VALUE NAME,
                                'subDepartments' VALUE NULL
                            )
                        )
                        FROM DEPARTMENT CHILD
                        WHERE CHILD.PARENT_DEPARTMENT_ID = PARENT.ID
                    )
                )
            )
            FROM DEPARTMENT PARENT
            WHERE PARENT.PARENT_DEPARTMENT_ID IS NULL
        ),
        'grades' VALUE (
            SELECT JSON_ARRAYAGG(
                JSON_OBJECT('id' VALUE ID, 'name' VALUE NAME)
            )
            FROM GRADE
        )
    ) AS ORGANIZATION_DATA
    FROM DUAL;
    </select>
    -->
    <select id="seletTable" resultType="map">
    	SELECT
    			${col1},
    			${col2}
    	  FROM
    	  		${table_name}
    </select>
    <select id="selectDepartment" resultType="map">
		SELECT 
			    d1.id AS parent_id, 
			    d1.name AS parent_name, 
			    d2.id AS child_id, 
			    d2.name AS child_name
		  FROM 
		    	department d1
	 LEFT JOIN 
		    	department d2 
			ON 
		    	d1.id = d2.parent_department_id
		 WHERE
		 		d2.id IS NOT null
	  ORDER BY 
		    	d1.id, d2.id
    </select>
</mapper>
