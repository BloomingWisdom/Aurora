<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 오라클 MyBatis 사용시 문장 끝에 세미콜론 있으면 오류남! -->

<mapper namespace="com.itwillbs.repository.ManufactureMapper">

    <select id="selectWorkcenter" resultType="map">
        SELECT
			   WORKCENTER_ID
			 , NAME
			 , USE_YN
			 , NOTE
			 , MANAGER_ID
			 , ROUTING_ID
          FROM WORKCENTER
    </select>
    
    <insert id="insertWorkcenter">
	    INSERT ALL
		<foreach collection="list" item="item">
			INTO WORKCENTER (
				  MANAGER_ID
				, NAME
				, NOTE
				, ROUTING_ID
				, USE_YN
				, WORKCENTER_ID
			)
			VALUES (
				  #{item.MANAGER_ID, jdbcType=VARCHAR}
				, #{item.NAME}
				, #{item.NOTE, jdbcType=VARCHAR}
				, #{item.ROUTING_ID, jdbcType=VARCHAR}
				, #{item.USE_YN}
				, #{item.WORKCENTER_ID}
			)
		</foreach>
		SELECT * FROM DUAL
    </insert>
    
    <delete id="deleteWorkcenter">
	    DELETE FROM WORKCENTER
	     WHERE WORKCENTER_ID IN
	    <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
	        #{id}
	    </foreach>
    </delete>
    
    <update id="updateWorkcenter">
		<foreach collection="list" item="row" separator=";" open="DECLARE BEGIN" close="; END;">
	        UPDATE WORKCENTER
	           SET 
	               NAME = #{row.NAME}
	             , NOTE = #{row.NOTE, jdbcType=VARCHAR}
	             , ROUTING_ID = #{row.ROUTING_ID, jdbcType=VARCHAR}
	             , USE_YN = #{row.USE_YN}
				 , MANAGER_ID = #{row.MANAGER_ID, jdbcType=VARCHAR}
	         WHERE WORKCENTER_ID = #{row.WORKCENTER_ID}
	    </foreach>
    </update>
    
    <select id="selectMember" resultType="map">
    	SELECT 
			   m.MEMBER_ID 	AS MEMBER_ID
			 , m.NAME 		AS NAME
			 , cc.CODE_NAME AS DEPT
		  FROM MEMBER m
			   INNER JOIN COMMON_CODE cc 
					   ON m.DEPT_ID = cc.CODE_ID 
		 WHERE 
		 	   1 = 1
		<if test='dept_id != null and dept_id != ""'>
		   AND m.DEPT_ID = #{dept_id}
		</if>
		<if test='member_name != null and member_name != ""'>
		   AND m.NAME = #{member_name}
		</if>
    </select>
    
    <select id="selectEquipment" resultType="map">
		SELECT 
			   EQUIPMENT_ID 	AS EQUIPMENT_ID
			 , EQUIPMENT_NAME 	AS EQUIPMENT_NAME
			 , EQUIPMENT_STATUS AS EQUIPMENT_STATUS
			 , EQUIPMENT_NOTE 	AS EQUIPMENT_NOTE
			 , WORKCENTER_ID	AS WORKCENTER_ID
		  FROM EQUIPMENT
		 WHERE
		 	   1 = 1
		<choose>
			<when test='workcenter_id != null and workcenter_id != ""'>
				AND WORKCENTER_ID = #{workcenter_id}
			</when>
			<otherwise>
				AND WORKCENTER_ID IS NULL
			</otherwise>
		</choose>
		<if test='use_yn != null and use_yn != ""'>
			AND EQUIPMENT_STATUS = #{use_yn}
		</if>
		<if test='searchKeyword != null and searchKeyword != ""'>
			AND (EQUIPMENT_ID LIKE concat('%', concat(#{searchKeyword}, '%'))
					OR EQUIPMENT_NAME LIKE concat('%', concat(#{searchKeyword}, '%')))
		</if>
    </select>
    
    <update id="addEquipment">
		<foreach collection="list" item="item" open="DECLARE BEGIN" separator=";" close="; END;">
		    UPDATE EQUIPMENT 
			   SET WORKCENTER_ID = #{item.WORKCENTER_ID}
			 WHERE EQUIPMENT_ID = #{item.EQUIPMENT_ID}
		</foreach>
    </update>
    
	<update id="deleteEquipment">
		<foreach collection="list" item="item" open="DECLARE BEGIN" separator=";" close="; END;">
		    UPDATE EQUIPMENT 
			   SET WORKCENTER_ID = NULL
			 WHERE EQUIPMENT_ID = #{item}
		</foreach>
    </update>
    
	<update id="deleteEquipmentByWorkcenterId">
		<foreach collection="list" item="item" open="DECLARE BEGIN" separator=";" close="; END;">
		    UPDATE EQUIPMENT 
			   SET WORKCENTER_ID = NULL
			 WHERE WORKCENTER_ID = #{item}
		</foreach>
    </update>
    
    <select id="selectProcess" resultType="map">
	    SELECT
			   PROCESS_ID 
			 , NAME 
			 , USE_YN 
			 , INSPECTION_YN 
			 , NOTE 
		  FROM PROCESS
    </select>
    
    <select id="checkDuplicateCode">
    	SELECT count(*) AS COUNT
		  FROM ${tableName}
		 WHERE ${tableCodeId} = #{codeVal}
    </select>
    
    <insert id="insertProcess">
	    INSERT ALL
		<foreach collection="list" item="item">
			INTO PROCESS (
				  PROCESS_ID
				, NAME
				, USE_YN
				, INSPECTION_YN
				, NOTE
			)
			VALUES (
				  #{item.PROCESS_ID, jdbcType=VARCHAR}
				, #{item.NAME}
				, #{item.USE_YN}
				, #{item.INSPECTION_YN}
				, #{item.NOTE, jdbcType=VARCHAR}
			)
		</foreach>
		SELECT * FROM DUAL
    </insert>
    
    <update id="updateProcess">
		<foreach collection="list" item="row" separator=";" open="DECLARE BEGIN" close="; END;">
	        UPDATE PROCESS
	           SET 
	               NAME = #{row.NAME}
	             , USE_YN = #{row.USE_YN}
	             , INSPECTION_YN = #{row.INSPECTION_YN}
	             , NOTE = #{row.NOTE, jdbcType=VARCHAR}
	         WHERE PROCESS_ID = #{row.PROCESS_ID}
	    </foreach>
    </update>
    
    <delete id="deleteProcess">
	    DELETE FROM PROCESS
	     WHERE PROCESS_ID IN
	    <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
	        #{id}
	    </foreach>
    </delete>
    
    <select id="selectRouting" resultType="map">
		SELECT 
			   ROUTING_ID
			 , NAME
			 , USE_YN
			 , ITEM_ID
			 , NOTE
			 , PROCESS_QUANTITY
		  FROM ROUTING
    </select>
    
    <select id="selectItem" resultType="map">
		SELECT
		  	   ITEM_ID
			 , ITEM_NAME
			 , ITEM_TYPE
			 , USE_YN
		  FROM ITEM
		 WHERE ITEM_ID NOT IN (SELECT ITEM_ID FROM ROUTING)
    </select>
    
    <insert id="insertRouting">
	    INSERT ALL
		<foreach collection="list" item="item">
			INTO ROUTING (
				  ROUTING_ID
				, NAME
				, USE_YN
				, ITEM_ID
				, NOTE
				, PROCESS_QUANTITY
			)
			VALUES (
				  #{item.ROUTING_ID}
				, #{item.NAME}
				, #{item.USE_YN}
				, #{item.ITEM_ID}
				, #{item.NOTE, jdbcType=VARCHAR}
				, 0
			)
		</foreach>
		SELECT * FROM DUAL
    </insert>
    
    <update id="updateRouting">
		<foreach collection="list" item="row" separator=";" open="DECLARE BEGIN" close="; END;">
	        UPDATE ROUTING
	           SET 
	               NAME = #{row.NAME}
	             , USE_YN = #{row.USE_YN}
	             , NOTE = #{row.NOTE, jdbcType=VARCHAR}
	         WHERE ROUTING_ID = #{row.ROUTING_ID}
	    </foreach>
    </update>
    
    <delete id="deleteRouting">
	    DELETE FROM ROUTING
	     WHERE ROUTING_ID IN
	    <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
	        #{id}
	    </foreach>
    </delete>
</mapper>