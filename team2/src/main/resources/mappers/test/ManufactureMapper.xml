<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 오라클 MyBatis 사용시 문장 끝에 세미콜론 있으면 오류남! -->

<mapper namespace="com.itwillbs.repository.ManufactureMapper">

    <select id="selectWorkcenter" resultType="map">
        SELECT
			   WORKCENTER_ID
			 , NAME
			 , USE_YN
			 , NOTE
			 , MANAGER_ID
			 , ROUTING_ID
          FROM WORKCENTER
    </select>
    
    <insert id="insertWorkcenter">
	    INSERT ALL
		<foreach collection="list" item="item">
			INTO WORKCENTER (
				  MANAGER_ID
				, NAME
				, NOTE
				, ROUTING_ID
				, USE_YN
				, WORKCENTER_ID
			)
			VALUES (
				  #{item.MANAGER_ID, jdbcType=VARCHAR}
				, #{item.NAME}
				, #{item.NOTE, jdbcType=VARCHAR}
				, #{item.ROUTING_ID, jdbcType=VARCHAR}
				, #{item.USE_YN}
				, #{item.WORKCENTER_ID}
			)
		</foreach>
		SELECT * FROM DUAL
    </insert>
    
    <delete id="deleteWorkcenter">
	    DELETE FROM WORKCENTER
	     WHERE WORKCENTER_ID IN
	    <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
	        #{id}
	    </foreach>
    </delete>
    
    <update id="updateWorkcenter">
		<foreach collection="list" item="row" separator=";" open="DECLARE BEGIN" close="; END;">
	        UPDATE WORKCENTER
	           SET 
	               WORKCENTER_ID = #{row.WORKCENTER_ID}
	             , NAME = #{row.NAME}
	             , NOTE = #{row.NOTE, jdbcType=VARCHAR}
	             , ROUTING_ID = #{row.ROUTING_ID, jdbcType=VARCHAR}
	             , USE_YN = #{row.USE_YN}
				 , MANAGER_ID = #{row.MANAGER_ID, jdbcType=VARCHAR}
	         WHERE WORKCENTER_ID = #{row.WORKCENTER_ID}
	    </foreach>
    </update>
    	
<!-- 	<select id="countExistingIds" parameterType="list" resultType="int"> -->
<!-- 	    SELECT COUNT(*) AS count -->
<!-- 	      FROM TEST -->
<!-- 	     WHERE ID IN -->
<!-- 	    <foreach collection="list" item="row" open="(" separator="," close=")"> -->
<!-- 	        #{row.ID} -->
<!-- 	    </foreach> -->
<!-- 	</select> -->
    
<!--     <select id="getColumnNames" parameterType="map" resultType="map">
	    SELECT LISTAGG(COLUMN_NAME, ',') WITHIN GROUP (ORDER BY COLUMN_ID) AS COLUMN_NAME
	    FROM USER_TAB_COLUMNS
	    WHERE TABLE_NAME = UPPER(#{tableName})
	</select> -->
	
<!-- 	<select id="getColumnNames" parameterType="map" resultType="string"> -->
<!-- 	    SELECT COLUMN_NAME  -->
<!-- 	    FROM ALL_TAB_COLUMNS -->
<!-- 	    WHERE TABLE_NAME = UPPER(#{tableName}) -->
<!--     	ORDER BY COLUMN_ID -->
<!-- 	</select> -->
	
<!-- 	<select id="selectToastTestById" resultType="map"> -->
<!--         SELECT * -->
<!--           FROM TEST -->
<!--         WHERE ID = #{ID} -->
<!--     </select> -->
    
<!-- 	<update id="updateToastTestById"> -->
<!--         UPDATE TEST -->
<!--            SET  -->
<!-- 			   COL_1 = #{COL_1} -->
<!--              , COL_2 = #{COL_2} -->
<!--              , COL_3 = #{COL_3} -->
<!--          WHERE ID = #{ID} -->
<!--     </update> -->
</mapper>