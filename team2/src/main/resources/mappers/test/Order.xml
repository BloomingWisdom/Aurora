<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 오라클 MyBatis 사용시 문장 끝에 세미콜론 있으면 오류남! -->

<mapper namespace="com.itwillbs.repository.OrderMapper">
	<!-- SEARCH -->
    <select id="getOrder" resultType="map">
        WITH OrderDetails AS (
            SELECT
                ORDER_ID,
                ORDER_STATUS,
                (SELECT CLIENT_NAME FROM CLIENT C WHERE C.CLIENT_ID = ORDR.CUSTOMER_ID) AS CUSTOMER_ID,
                (SELECT ITEM_NAME FROM ITEM M2 WHERE M2.ITEM_ID = ORDR.ITEM_ID) AS ITEM_ID,
                (SELECT ITEM_COST FROM ITEM M2 WHERE M2.ITEM_ID = ORDR.ITEM_ID) AS ITEM_PR,
                TO_CHAR(ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE,
                (SELECT ITEM_COST FROM ITEM M1 WHERE M1.ITEM_ID = ORDR.ITEM_ID) AS ITEM_PRICE,
                ORDER_QTY,
                TO_CHAR(DELIVERY_DATE, 'YYYY-MM-DD') AS DELIVERY_DATE,
                (SELECT ITEM_UNIT FROM ITEM M2 WHERE M2.ITEM_ID = ORDR.ITEM_ID) AS UNIT,
                (SELECT RESP_NAME FROM CLIENT C WHERE C.CLIENT_ID = ORDR.CUSTOMER_ID) AS SALES_REP_ID,
                (SELECT NAME FROM MEMBER M1 WHERE M1.MEMBER_ID = ORDR.REGIST_BY) AS REGIST_BY,
                TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE,
                REMARKS,
                TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
            FROM ORDERS ORDR
            WHERE #{orderId, jdbcType=VARCHAR} IS NULL OR ORDER_ID = #{orderId, jdbcType=VARCHAR}
        )
        SELECT
            ORDER_ID,
            ORDER_STATUS,
            CUSTOMER_ID,
            ITEM_ID,
            ITEM_PR,
            ORDER_DATE,
            ITEM_PRICE * ORDER_QTY AS ORDER_PR,
            (ITEM_PRICE * ORDER_QTY) * 0.1 AS TAX,
            (ITEM_PRICE * ORDER_QTY) + ((ITEM_PRICE * ORDER_QTY) * 0.1) AS ORDER_SUM,
            DELIVERY_DATE,
            UNIT,
            SALES_REP_ID,
            ORDER_QTY,
            ORDER_QTY AS SHIPPED_QTY,
            ORDER_QTY AS BACKLOG,
            REGIST_BY,
            UPDATE_DATE,
            REMARKS,
            CREATE_DATE
        FROM OrderDetails
        ORDER BY ORDER_ID DESC
    </select>
    
    <!-- 필터링 수주 조회 -->
    <select id="selectFilteredOrders" resultType="map">
        WITH OrderDetails AS (
            SELECT
                ORDER_ID,
                ORDER_STATUS,
                (SELECT CLIENT_NAME FROM CLIENT C WHERE C.CLIENT_ID = ORDR.CUSTOMER_ID) AS CUSTOMER_ID,
                (SELECT ITEM_NAME FROM ITEM M2 WHERE M2.ITEM_ID = ORDR.ITEM_ID) AS ITEM_ID,
                (SELECT ITEM_COST FROM ITEM M2 WHERE M2.ITEM_ID = ORDR.ITEM_ID) AS ITEM_PR,
                TO_CHAR(ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE,
                (SELECT ITEM_COST FROM ITEM M1 WHERE M1.ITEM_ID = ORDR.ITEM_ID) AS ITEM_PRICE,
                ORDER_QTY,
                TO_CHAR(DELIVERY_DATE, 'YYYY-MM-DD') AS DELIVERY_DATE,
                (SELECT ITEM_UNIT FROM ITEM M2 WHERE M2.ITEM_ID = ORDR.ITEM_ID) AS UNIT,
                (SELECT RESP_NAME FROM CLIENT C WHERE C.CLIENT_ID = ORDR.CUSTOMER_ID) AS SALES_REP_ID,
                (SELECT NAME FROM MEMBER M1 WHERE M1.MEMBER_ID = ORDR.REGIST_BY) AS REGIST_BY,
                TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE,
                REMARKS,
                TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
            FROM ORDERS ORDR
            <where>
                <!-- 주문 날짜 범위 필터링 -->
                <if test="startDate != null">
                    AND ORDER_DATE &gt;= #{startDate}
                </if>
                <if test="endDate != null">
                    AND TRUNC(ORDER_DATE) &lt;= #{endDate}
                </if>

                <!-- 거래처 필터링 -->
                <if test="customerId != null and customerId != 'all'">
                    AND CUSTOMER_ID = #{customerId}
                </if>

                <!-- 품목 필터링 -->
                <if test="itemId != null and itemId != 'all'">
                    AND ITEM_ID = #{itemId}
                </if>

                <!-- 수주번호 필터링 -->
                <if test="orderId != null">
                    AND ORDER_ID LIKE '%' || #{orderId} || '%'
                </if>

                <!-- 진행상태 필터링 -->
                <if test="orderStatus != null">
                    AND ORDER_STATUS = #{orderStatus}
                </if>
            </where>
        )
        SELECT
            ORDER_ID,
            ORDER_STATUS,
            CUSTOMER_ID,
            ITEM_ID,
            ITEM_PR,
            ORDER_DATE,
            ITEM_PRICE * ORDER_QTY AS ORDER_PR,
            (ITEM_PRICE * ORDER_QTY) * 0.1 AS TAX,
            (ITEM_PRICE * ORDER_QTY) + ((ITEM_PRICE * ORDER_QTY) * 0.1) AS ORDER_SUM,
            DELIVERY_DATE,
            UNIT,
            SALES_REP_ID,
            ORDER_QTY,
            ORDER_QTY AS SHIPPED_QTY,
            ORDER_QTY AS BACKLOG,
            REGIST_BY,
            UPDATE_DATE,
            REMARKS,
            CREATE_DATE
        FROM OrderDetails
        ORDER BY ORDER_ID DESC
    </select>
    
    <!-- INSERT -->
	<insert id="insertOrder">
	    INSERT INTO ORDERS (
	        ORDER_DATE, CUSTOMER_ID, SALES_REP_ID, DELIVERY_DATE, 
	        ORDER_QTY, ITEM_ID, ORDER_PR, REMARKS, REGIST_BY, CREATE_DATE, UPDATE_DATE
	    )
	    VALUES (
	        TO_DATE(#{orderDate}, 'YYYY-MM-DD'), #{customerId}, 
	        #{salesRepId}, TO_DATE(#{deliveryDate}, 'YYYY-MM-DD'), 
	        #{orderQty}, #{itemId}, #{orderPr}, #{remarks}, #{registBy}, SYSDATE, SYSDATE
	    )
	</insert>
    
    <!-- UPDATE -->
    <update id="updateOrder">
        UPDATE ORDERS
        SET
        	ORDER_DATE = TO_DATE(#{orderDate}, 'YYYY-MM-DD'),
            CUSTOMER_ID = #{customerId},
            SALES_REP_ID = #{salesRepId},
            DELIVERY_DATE = TO_DATE(#{deliveryDate}, 'YYYY-MM-DD'),
            ORDER_QTY = #{orderQty},
            ITEM_ID = #{itemId},
            ORDER_PR = #{orderPr},
            REMARKS = #{remarks},
            UPDATE_DATE = SYSDATE
        WHERE ORDER_ID = #{orderId}
    </update>
    
   	<!-- DELETE -->
      <delete id="deleteOrder">
        DELETE FROM ORDERS
        WHERE ORDER_ID IN
        <foreach item="orderId" collection="list" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>
    
    <!-- itemList -->
    <select id="getItemList" resultType="map">
    	SELECT ITEM_ID, ITEM_NAME, ITEM_COST AS ITEM_PRICE, ITEM_UNIT AS UNIT
    	FROM ITEM
    </select>
    
    <!-- clientList -->
    <select id="getClientList" resultType="map" parameterType="map">
    	SELECT CLIENT_ID, CLIENT_NAME, CLIENT_TYPE, RESP_NAME, CLIENT_STATUS
    	FROM CLIENT
    	WHERE 
		 	   1 = 1
		<if test='client_id != null and client_id != ""'>
		   AND CLIENT_ID = #{client_id}
		</if>
		<if test='client_name != null and client_name != ""'>
		   AND CLIENT_NAME = #{client_name}
		</if>
    </select>
</mapper>
