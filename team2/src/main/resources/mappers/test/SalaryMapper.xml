<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 오라클 MyBatis 사용시 문장 끝에 세미콜론 있으면 오류남! -->

<mapper namespace="com.itwillbs.repository.SalaryMapper">

	<select id="selectSalaryMember" resultType="map">
	<!-- selectSalaryMember - 사원 조회 -->
		 SELECT
		 	MEMBER_ID
		  , NAME
		  , GRADE_ID
		  , DEPT_ID
		  , SALARY
		 FROM
		 	MEMBER
	</select>

    <select id="selectSalaryList" resultType="map">
    <!-- selectSalaryList - 급여기록 조회 -->
    <!-- getSalaryListMinMaxDate에서 조회된 최대최소일 범위의 급여기록 조회 -->
        SELECT
            S.PAYDAY,
            M.MEMBER_ID,
            M.NAME,
            M.GRADE_ID,
            (SELECT CODE_NAME
            	FROM COMMON_CODE CC
            	WHERE M.GRADE_ID = CC.CODE_ID) AS GRADE_NAME,
            M.DEPT_ID,
            (SELECT CODE_NAME
        		FROM COMMON_CODE CC
        		WHERE M.DEPT_ID = CC.CODE_ID) AS DEPT_NAME,
            M.SALARY,
            S.POSITION_BONUS,
            S.HOLIDAY_BONUS,
            S.NIGHT_BONUS,
            S.YEAREND_BONUS,
            S.FULLSERVICE_BONUS,
            S.PERFORMANCE_BONUS,
            (M.SALARY + S.POSITION_BONUS + S.HOLIDAY_BONUS + S.NIGHT_BONUS + 
             S.YEAREND_BONUS + S.FULLSERVICE_BONUS + S.PERFORMANCE_BONUS) AS TOTAL
        FROM MEMBER M
        LEFT JOIN SALARY S
          ON M.MEMBER_ID = S.MEMBER_ID
		WHERE
			1 = 1
			<if test='id != "admin"'>
			   AND
				  S.MEMBER_ID = #{id}
		  	</if>
			<if test='startDate != null and startDate != "" 
						and endDate != null and endDate != ""'>
				AND 
					PAYDAY BETWEEN #{startDate} 
					AND #{endDate} 
			</if>
		ORDER BY
			S.PAYDAY DESC
    </select>
    
    <select id="getSalaryListMinMaxDate" resultType="map">
     <!-- getSalaryInputMinMaxDate - 급여조회에서 최대최소일 조회 -->
        SELECT 
		      MAX(PAYDAY)	AS SALARY_MAX_DATE
    		, MIN(PAYDAY) 	AS SALARY_MIN_DATE
		FROM
		      SALARY
	    WHERE
			  1 = 1
		  <if test='id != "admin"'>
			  AND
				 member_id = #{id}
		  </if>
    </select>
    
    <select id="selectSalaryListById" resultType="map">
    <!-- 사원ID와 귀속연월에 해당하는 급여정보를 조회 -->
    <!-- 만약 귀속연월이 없으면 사원ID에 해당하는 급여정보를 조회 -->
		SELECT
            M.MEMBER_ID,
            M.NAME,
            M.GRADE_ID,
            M.DEPT_ID,
            M.SALARY,
            S.PAYDAY,
            S.POSITION_BONUS,
            S.HOLIDAY_BONUS,
            S.NIGHT_BONUS,
            S.YEAREND_BONUS, 
            S.FULLSERVICE_BONUS,
            S.PERFORMANCE_BONUS,
            (M.SALARY + S.POSITION_BONUS + S.HOLIDAY_BONUS + S.NIGHT_BONUS + 
             S.YEAREND_BONUS + S.FULLSERVICE_BONUS + S.PERFORMANCE_BONUS) AS TOTAL
		FROM 
			MEMBER M
		LEFT JOIN SALARY S
          	   ON M.MEMBER_ID = S.MEMBER_ID
		WHERE
			1 = 1
			AND
				M.MEMBER_ID = #{id}
			<if test='payday != null'>
				AND 
					S.PAYDAY = #{payday}
			</if>
		ORDER BY
			S.PAYDAY DESC
    </select>
    
    <!-- 사원별 급여 입력(관리자) -->
	<insert id="insertSalary" parameterType="map">	    
		INSERT INTO SALARY (
			MEMBER_ID,
			GRADE_ID,
			PAYDAY,
			POSITION_BONUS,
			HOLIDAY_BONUS,
			NIGHT_BONUS,
			YEAREND_BONUS,
			FULLSERVICE_BONUS,
			PERFORMANCE_BONUS
			)
	        SELECT 
	            m.member_id,
	            m.grade_id,
	            #{PAYDAY},  
	            #{POSITION_BONUS}, 
	            #{HOLIDAY_BONUS},    
		    	#{NIGHT_BONUS},
	            #{YEAREND_BONUS},
	            #{FULLSERVICE_BONUS},
	            #{PERFORMANCE_BONUS}
	        FROM 
	        	member m
	        WHERE 
	        	m.member_id = #{MEMBER_ID}
<!--         AND NOT EXISTS ( -->
<!--             SELECT 1 -->
<!--             FROM salary s -->
<!--             WHERE s.member_id = m.member_id -->
<!--         ) -->	    
	</insert>
 	
 	<!-- 급여 수정 - 사원의 기본금 수정 -->
	<update id="updateMemberSalary" parameterType="map">
		UPDATE MEMBER 
	   	   SET 
	   	   	   SALARY = #{salary}
		WHERE 
			 MEMBER_ID = #{memberId}
	</update>
	
	<!-- 급여 수정 - 사원의 상여금(보너스) 수정 -->
	<update id="updateSalaryBonus" parameterType="map">
		UPDATE SALARY 
	   	   SET 
	   	   	   PAYDAY = #{payday}
	   	   	 , POSITION_BONUS = #{positionBonus}
	       	 , HOLIDAY_BONUS = #{holidayBonus}
	       	 , NIGHT_BONUS = #{nightBonus}
	       	 , YEAREND_BONUS = #{yearendBonus}
	       	 , FULLSERVICE_BONUS = #{fullserviceBonus}
	       	 , PERFORMANCE_BONUS = #{performanceBonus}
	       	 , UPDATE_DATE = SYSDATE
		WHERE 
			 MEMBER_ID = #{memberId}
	</update>

</mapper>