<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 오라클 MyBatis 사용시 문장 끝에 세미콜론 있으면 오류남! -->

<mapper namespace="com.itwillbs.repository.ProductionMapper">
	<select id="selectWorkcenter" resultType="map">
		SELECT DISTINCT
			   pod.WORKCENTER_ID								AS WORKCENTER_ID 
			 , w.NAME 											AS WORKCENTER_NAME
			 , (SELECT CASE WHEN COUNT(*) = 0 THEN '비가동'
					 		ELSE '가동중'
					 	END
				  FROM PRODUCTION_ORDER_DETAIL
				 WHERE 
				 	   1 = 1
				   AND WORKCENTER_ID = pod.WORKCENTER_ID
				   AND STATUS = 'ST-002') 						AS WORKING_CNT
		  FROM PRODUCTION_ORDER_DETAIL pod
			   INNER JOIN WORKCENTER w 
					   ON pod.WORKCENTER_ID = w.WORKCENTER_ID 
	</select>
	
	<select id="selectProductionOrderDetail" resultType="map">
		SELECT
			   pod.PRODUCTION_ORDER_DETAIL_ID 				AS PRODUCTION_ORDER_DETAIL_ID
			 , pod.ITEM_ID 									AS ITEM_ID
			 , i.ITEM_NAME 									AS ITEM_NAME
			 , pod.AMOUNT 									AS AMOUNT
			 , i.ITEM_UNIT 									AS ITEM_UNIT
			 , po.CREATE_DATE 								AS CREATE_DATE
			 , pod.STATUS 									AS STATUS_CODE
			 , mc.SUB_NAME 									AS STATUS_NAME
			 , (SELECT COUNT(*) 
				  FROM PRODUCTION_ORDER_DETAIL 
				 WHERE 
					   1 = 1
				   AND WORKCENTER_ID = #{workcenter_id}
				   AND STATUS = 'ST-002')					AS RUNNNING_WORKCENTER_CNT
		  FROM PRODUCTION_ORDER_DETAIL pod
			   INNER JOIN PRODUCTION_ORDER po 
					   ON pod.PRODUCTION_ORDER_ID = po.PRODUCTION_ORDER_ID
			   INNER JOIN ITEM i 
					   ON pod.ITEM_ID = i.ITEM_ID
			   INNER JOIN MES_COMMON mc 
					   ON pod.STATUS = mc.CLASSIFICATION_ID 
		 WHERE 
			   1 = 1
		   AND pod.WORKCENTER_ID = #{workcenter_id}
		   AND pod.STATUS IN('ST-001', 'ST-002')
		 ORDER BY po.CREATE_DATE, po.CREATE_TIME ASC
	</select>
	
	<select id="selectProductionOrderDetailBom" resultType="map">
		SELECT
			   pm.ITEM_ID 	AS ITEM_ID
			 , i.ITEM_NAME 	AS ITEM_NAME
			 , pm.AMOUNT	AS ITEM_AMOUNT
			 , i.ITEM_UNIT 	AS ITEM_UNIT
		  FROM PUT_MATERIALS pm
			   INNER JOIN ITEM i 
					   ON pm.ITEM_ID = i.ITEM_ID
		 WHERE PRODUCTION_ORDER_DETAIL_ID = #{productionOrderDetailId}
		 UNION ALL
		SELECT 
			   pm.ITEM_ID		AS ITEM_ID
			 , m.MATERIAL_NAME 	AS ITEM_NAME
			 , pm.AMOUNT 		AS ITEM_AMOUNT
			 , m.UNIT 			AS ITEM_UNIT
		  FROM PUT_MATERIALS pm 
			   INNER JOIN MATERIAL m 
					   ON pm.ITEM_ID = m.MATERIAL_ID 
		 WHERE PRODUCTION_ORDER_DETAIL_ID = #{productionOrderDetailId}
	</select>
	
	<select id="selectStock" resultType="map">
		SELECT 
			   loc.WAREHOUSE_ID 		AS WAREHOUSE_ID
			 , w.WAREHOUSE_NAME 		AS WAREHOUSE_NAME
			 , il.LOT_ID 				AS LOT_ID
			 , m.UNIT 					AS UNIT
			 , il.QUANTITY 				AS CURRENT_QUANTITY
			 , m.MATERIAL_ID 			AS ITEM_ID
		  FROM INBOUND_LOTS il
			   INNER JOIN ITEM_LOCATION loc 
					   ON il.MATERIAL_ID = loc.MATERIAL_ID 
			   INNER JOIN WAREHOUSE w 
					   ON loc.WAREHOUSE_ID = w.WAREHOUSE_ID 
			   INNER JOIN MATERIAL m 
					   ON il.MATERIAL_ID = m.MATERIAL_ID 
		 WHERE 
			   1 = 1
		   AND il.MATERIAL_ID = #{itemId}
		   AND il.QUANTITY > 0
		 UNION ALL 
		SELECT 
			   loc.WAREHOUSE_ID 		AS WAREHOUSE_ID
			 , w.WAREHOUSE_NAME 		AS WAREHOUSE_NAME
			 , pl.PRODUCTION_LOT_ID 	AS LOT_ID
			 , i.ITEM_UNIT 				AS UNIT
			 , pl.quantity 				AS CURRENT_QUANTITY
			 , i.ITEM_ID				AS ITEM_ID
		  FROM PRODUCTION_LOT pl
			   INNER JOIN ITEM_LOCATION loc
					   ON pl.ITEM_ID = loc.ITEM_ID 
			   INNER JOIN WAREHOUSE w 
					   ON loc.WAREHOUSE_ID = w.WAREHOUSE_ID 
			   INNER JOIN ITEM i 
					   ON pl.ITEM_ID = i.ITEM_ID 
		 WHERE
		 	   1 = 1
		   AND pl.ITEM_ID = #{itemId}
		   AND pl.quantity > 0
	</select>
	
	<select id="selectMaxPutMaterialsDetailId" resultType="int">
		SELECT NVL(TO_NUMBER(SUBSTR(MAX(PUT_MATERIALS_DETAIL_ID), 4)), 0) + 1 AS MAX_NUMBER 
		  FROM PUT_MATERIALS_DETAIL
	</select>
	
	<insert id="insertMaterialsDetail">
		INSERT ALL
		<foreach collection="list" item="item">
			INTO PUT_MATERIALS_DETAIL (
				  PUT_MATERIALS_DETAIL_ID
				, PUT_MATERIALS_ID
				, ITEM_LOT
				, AMOUNT
			) VALUES (
				  #{item.PUT_MATERIALS_DETAIL_ID}
				, (SELECT PUT_MATERIALS_ID 
					 FROM PUT_MATERIALS pm 
					WHERE 
						  1 = 1
					  AND PRODUCTION_ORDER_DETAIL_ID = #{item.PRODUCTION_ORDER_DETAIL_ID}
					  AND ITEM_ID = #{item.ITEM_ID})
				, #{item.LOT_ID}
				, #{item.RELEASE_QUANTITY}
			)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertWorkcenterLog">
		INSERT INTO WORKCENTER_LOG (
			  WORKCENTER_LOG_ID
			, WORKCENTER_ID
			, PRODUCTION_ORDER_DETAIL_ID
			, START_DATE
			, START_TIME
		) VALUES (
			  (SELECT 'WLI' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(WORKCENTER_LOG_ID, 4))), 0) + 1, 6, '0') AS NEW_ID FROM WORKCENTER_LOG)
			, (
				SELECT WORKCENTER_ID 
				  FROM PRODUCTION_ORDER_DETAIL
				 WHERE PRODUCTION_ORDER_DETAIL_ID = #{PRODUCTION_ORDER_DETAIL_ID}
			  )
			, #{PRODUCTION_ORDER_DETAIL_ID}
			, (SELECT TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD') FROM dual)
			, (SELECT TO_CHAR(CURRENT_DATE, 'HH24:MM:DD') FROM dual)
		)
	</insert>
	
	<update id="updateLotQuantity">
		<foreach collection="list" item="item" open="DECLARE BEGIN" separator=";" close="; END;">
			UPDATE
			<choose>
				<when test="item.ITEM_ID.matches('^ITEM[0-9]+$')">
					PRODUCTION_LOT
				</when>
				<otherwise>
					INBOUND_LOTS
				</otherwise>
			</choose>
			   SET QUANTITY = QUANTITY - #{item.RELEASE_QUANTITY}
			 WHERE
	 		<choose>
				<when test="item.ITEM_ID.matches('^ITEM[0-9]+$')">
						ITEM_ID = #{item.ITEM_ID}
					AND PRODUCTION_LOT_ID = #{item.LOT_ID}
				</when>
				<otherwise>
						MATERIAL_ID = #{item.ITEM_ID}
					AND LOT_ID = #{item.LOT_ID}
				</otherwise>
			</choose>
		</foreach>
	</update>

	<update id="updateWarehouseItemQuantity">
		<foreach collection="list" item="item" open="DECLARE BEGIN" separator=";" close="; END;">
			UPDATE ITEM_LOCATION
			   SET CURRENT_QUANTITY = CURRENT_QUANTITY - #{item.RELEASE_QUANTITY}
			 WHERE
	 		<choose>
				<when test="item.ITEM_ID.matches('^ITEM[0-9]+$')">
						ITEM_ID = #{item.ITEM_ID}
					AND WAREHOUSE_ID = #{item.WAREHOUSE_ID}
				</when>
				<otherwise>
						MATERIAL_ID = #{item.ITEM_ID}
					AND WAREHOUSE_ID = #{item.WAREHOUSE_ID}
				</otherwise>
			</choose>
		</foreach>
	</update>
	
	<update id="updateProductionOrderDetailStatus">
		UPDATE PRODUCTION_ORDER_DETAIL 
		   SET STATUS = 'ST-002'
		 WHERE PRODUCTION_ORDER_DETAIL_ID = #{PRODUCTION_ORDER_DETAIL_ID}
	</update>
	
	<update id="updateProductionOrderStatus">
		UPDATE PRODUCTION_ORDER 
		   SET STATUS = 'ST-002'
		 WHERE PRODUCTION_ORDER_ID = (
		    SELECT PRODUCTION_ORDER_ID
		      FROM PRODUCTION_ORDER_DETAIL
		     WHERE PRODUCTION_ORDER_DETAIL_ID = #{PRODUCTION_ORDER_DETAIL_ID}
		   )
		   AND (SELECT COUNT(*) AS STATUS_COUNT
				  FROM PRODUCTION_ORDER_DETAIL
				 WHERE 
				 	   1 = 1
				   AND PRODUCTION_ORDER_ID = (
						  SELECT PRODUCTION_ORDER_ID
						    FROM PRODUCTION_ORDER_DETAIL
						   WHERE PRODUCTION_ORDER_DETAIL_ID = #{PRODUCTION_ORDER_DETAIL_ID}
					   )
				   AND STATUS = 'ST-002') >= 1
	</update>
</mapper>