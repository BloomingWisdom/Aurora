<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 오라클 MyBatis 사용시 문장 끝에 세미콜론 있으면 오류남! -->

<mapper namespace="com.itwillbs.repository.DashboardMapper">
	<!-- 현재 미사용 -->
    <select id="getSelectBoxList" resultType="map">
    <!-- getSelectBoxList 셀렉트박스 목록 조회 -->
		SELECT 
		 		CODE_ID 	AS CODE
		 	  , CODE_NAME 	AS NAME
		 	  , GROUP_ID	AS GROUP_ID
		  FROM  COMMON_CODE
		 WHERE 
				1 = 1
		   AND  USE_YN = 'Y'
		   <if test='type != null and type != ""'>
				AND  GROUP_ID = #{type}
		   </if>
    </select>
        
    <!-- 도넛 차트 조회 (예시 - 설비 상태) -->
    <select id="getMyAttendanceHistoryDonutChart" resultType="map">
    <!-- get___DonutChart 기록 도넛 차트 조회 -->
		SELECT 
			   EQUIPMENT_STATUS
			 , CASE 
			       WHEN EQUIPMENT_STATUS = 'Y' THEN '사용중' 
			       WHEN EQUIPMENT_STATUS = 'N' THEN '사용안함' 
			       ELSE '미정'
		       END 							AS ATTENDANCE_TEXT
			 , COUNT(EQUIPMENT_STATUS)		AS PIE_CHART_VALUE
		FROM EQUIPMENT
		GROUP BY EQUIPMENT_STATUS
		ORDER BY 
		    CASE 
		        WHEN EQUIPMENT_STATUS = 'Y' THEN 1  
		        WHEN EQUIPMENT_STATUS = 'N' THEN 2  
		        ELSE 3  
		    END
    </select>
    
    <!-- 막대 차트 조회 (에시 - 설비 상태) -->
    <select id="getAttendanceHistoryStackedBarChart" resultType="map">
    	<!-- get___StackedBarChart 기록 스택바차트 조회 -->
		SELECT 
			   EQUIPMENT_STATUS
			 , CASE 
			       WHEN EQUIPMENT_STATUS = 'Y' THEN '사용중' 
			       WHEN EQUIPMENT_STATUS = 'N' THEN '사용안함' 
			       ELSE '미정'
		       END 							AS ATTENDANCE_TEXT
			 , COUNT(EQUIPMENT_STATUS)		AS PIE_CHART_VALUE
		FROM EQUIPMENT
		GROUP BY EQUIPMENT_STATUS
		ORDER BY 
		    CASE 
		        WHEN EQUIPMENT_STATUS = 'Y' THEN 1  
		        WHEN EQUIPMENT_STATUS = 'N' THEN 2  
		        ELSE 3  
		    END
    </select>
    
    <!-- 현재 미사용 -->
    <select id="getProductionStackedBarChart" resultType="map">
    	<!-- get___StackedBarChart 기록 스택바차트 조회 -->
    	<!-- 미구현 -->
		SELECT 
			   EQUIPMENT_STATUS
			 , CASE 
			       WHEN EQUIPMENT_STATUS = 'Y' THEN '사용중' 
			       WHEN EQUIPMENT_STATUS = 'N' THEN '사용안함' 
			       ELSE '미정'
		       END 							AS ATTENDANCE_TEXT
			 , COUNT(EQUIPMENT_STATUS)		AS PIE_CHART_VALUE
		FROM EQUIPMENT
		GROUP BY EQUIPMENT_STATUS
		ORDER BY 
		    CASE 
		        WHEN EQUIPMENT_STATUS = 'Y' THEN 1  
		        WHEN EQUIPMENT_STATUS = 'N' THEN 2  
		        ELSE 3  
		    END
    </select>
    
    <!-- 막대 차트 조회 (발주 상태) -->
    <select id="getPoStackedBarChart" resultType="map">
    	<!-- get___StackedBarChart 기록 스택바차트 조회 -->
    	<!-- PO_DETAIL 기록 스택바차트 조회 -->
    	<!-- 일별-주별-월별 발주 상태 기록을 조회 -->
		SELECT 
		       TO_CHAR(TO_DATE(CREATE_DATE, 'YY/MM/DD'), 'MM-DD') AS ORDER_DATE
		     , PO_STATUS
		     , CASE 
		       		WHEN PO_STATUS = 'N' THEN '미결' 
		       		WHEN PO_STATUS = 'I' THEN '진행중' 
		       		WHEN PO_STATUS = 'Y' THEN '마감' 
		       		WHEN PO_STATUS = 'C' THEN '검수마감' 
		       		ELSE '미정'
		       END AS PO_TEXT
		     , COUNT(PO_STATUS) AS STACK_CHART_VALUE
		  FROM PO_DETAIL
		 WHERE 
			   CREATE_DATE IS NOT NULL
	  GROUP BY 
			   CREATE_DATE
			 , PO_STATUS
	  ORDER BY 
			   ORDER_DATE ASC
			 , CASE 
		           WHEN PO_STATUS = 'N' THEN 1  
		           WHEN PO_STATUS = 'I' THEN 2  
		           WHEN PO_STATUS = 'Y' THEN 3  
		           WHEN PO_STATUS = 'C' THEN 4  
		           ELSE 5  
	    	   END
    </select>
    
    <!-- 막대 차트 조회 (거래처별 발주량 및 불량률) -->
    <select id="selectClientPo" resultType="map">
    	<!-- getClientInboundChart 기록 스택바차트 조회 -->
    	<!-- 거래처별 발주량 및 불량률 기록을 조회 -->
		SELECT
		       CL.CLIENT_NAME
		     , PO.CREATE_DATE
		     , MC.SUB_ID || '-' || MT.GROUP_CODE || '-' || MT.MATERIAL_ID AS MATERIAL_ID
		     , MT.MATERIAL_NAME
		     , NVL(SUM(PD.PO_COUNT), 0) 		AS TOTAL_PO_COUNT
		     , NVL(SUM(II.DEFECT_QUANTITY), 0) 	AS TOTAL_DEFECT_QUANTITY
		     , CASE 
		       	   WHEN SUM(PD.PO_COUNT) = 0 THEN 0
		           ELSE ROUND(NVL(SUM(II.DEFECT_QUANTITY), 0) / SUM(PD.PO_COUNT) * 100, 2)
		       END AS DEFECT_RATE
		  FROM 
			   PURCHASE_ORDER PO
     LEFT JOIN 
     		   CLIENT CL ON PO.CLIENT_ID = CL.CLIENT_ID
     LEFT JOIN 
     		   PO_DETAIL PD ON PO.PO_ID = PD.PO_ID
     LEFT JOIN 
     		   MATERIAL MT ON PD.MATERIAL_ID = MT.MATERIAL_ID
     LEFT JOIN 
     		   MATERIAL_CATEGORY MC ON MT.GROUP_CODE = MC.MATL_CTGR
     LEFT JOIN 
     		   INBOUND_INSPECTION II ON PD.PODETAIL_ID = II.PODETAIL_ID
	  GROUP BY 
	  		   CL.CLIENT_NAME
	  		 , PO.CREATE_DATE
	  		 , MC.SUB_ID
	  		 , MT.GROUP_CODE
	  		 , MT.MATERIAL_ID
	  		 , MT.MATERIAL_NAME
	  ORDER BY 
	  		   CL.CLIENT_NAME
	  		 , PO.CREATE_DATE
    </select>
    
    <!-- 막대 차트 조회 (거래처별 불량률) -->
    <select id="getClientInboundChart" resultType="map">
    	<!-- getClientInboundChart 기록 스택바차트 조회 -->
    	<!-- 거래처별 불량률 기록을 조회 -->
		SELECT
		       CL.CLIENT_NAME
		     , NVL(SUM(PD.PO_COUNT), 0) 		AS TOTAL_PO_COUNT
		     , NVL(SUM(II.DEFECT_QUANTITY), 0) 	AS TOTAL_DEFECT_QUANTITY
		     , CASE 
		       	   WHEN SUM(PD.PO_COUNT) = 0 THEN 0
		           ELSE ROUND(NVL(SUM(II.DEFECT_QUANTITY), 0) / SUM(PD.PO_COUNT) * 100, 2)
		       END AS DEFECT_RATE
		  FROM 
			   PURCHASE_ORDER PO
     LEFT JOIN 
     		   CLIENT CL ON PO.CLIENT_ID = CL.CLIENT_ID
     LEFT JOIN 
     		   PO_DETAIL PD ON PO.PO_ID = PD.PO_ID
     LEFT JOIN 
     		   INBOUND_INSPECTION II ON PD.PODETAIL_ID = II.PODETAIL_ID
	  GROUP BY 
	  		   CL.CLIENT_NAME
	  ORDER BY 
	  		   DEFECT_RATE DESC
    </select>
    
    <!-- 라인 차트 조회 (일별 불량률) -->
    <select id="selectInboundChart" resultType="map">
    	<!-- selectInboundChart 기록 스택바차트 조회 -->
    	<!-- 일별 불량률 기록을 조회 -->
		SELECT
		       TO_CHAR(TO_DATE(PO.CREATE_DATE, 'YY/MM/DD'), 'MM-DD') AS ORDER_DATE
		     , NVL(SUM(PD.PO_COUNT), 0) 		AS TOTAL_PO_COUNT
		     , NVL(SUM(II.DEFECT_QUANTITY), 0) 	AS TOTAL_DEFECT_QUANTITY
		     , CASE 
		       	   WHEN SUM(PD.PO_COUNT) = 0 THEN 0
		           ELSE ROUND(NVL(SUM(II.DEFECT_QUANTITY), 0) / SUM(PD.PO_COUNT) * 100, 2)
		       END AS DEFECT_RATE
		  FROM 
			   PURCHASE_ORDER PO
     LEFT JOIN 
     		   PO_DETAIL PD ON PO.PO_ID = PD.PO_ID
     LEFT JOIN 
     		   INBOUND_INSPECTION II ON PD.PODETAIL_ID = II.PODETAIL_ID
	  GROUP BY 
	  		   TO_CHAR(TO_DATE(PO.CREATE_DATE, 'YY/MM/DD'), 'MM-DD')
	  ORDER BY 
	  		   ORDER_DATE
    </select>
</mapper>