<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 오라클 MyBatis 사용시 문장 끝에 세미콜론 있으면 오류남! -->

<mapper namespace="com.itwillbs.repository.AttendanceMapper">
    <select id="getMyCommuteHistory" resultType="map">
    <!-- getMyCommuteHistory 출퇴근기록 조회 -->
        SELECT 
              CHECK_IN_DATE				AS COMMUTE_CHECK_IN_DATE
    		, CHECK_IN_TIME				AS COMMUTE_CHECK_IN_TIME
    		, NVL(CHECK_OUT_TIME, '-')	AS COMMUTE_CHECK_OUT_TIME
		  FROM
		      COMMUTE
		 WHERE
		 	  1 = 1
		   AND
			  member_id = #{id}
			  <if test='startDate != null and startDate != ""
	   			 		and endDate != null and endDate != ""'>
				  AND 
					  CHECK_IN_DATE BETWEEN #{startDate} 
										AND #{endDate} 
			  </if>
		 ORDER BY
		 	  CHECK_IN_TIME DESC
    </select>
    
    <select id="getMyCommuteHistoryMinMaxDate" resultType="map">
    <!-- getMyCommuteHistoryMinMaxDate 출퇴근기록에서 최대최소일 조회 -->
        SELECT 
		      MAX(CHECK_IN_DATE)	AS COMMUTE_MAX_DATE
    		, MIN(CHECK_IN_DATE) 	AS COMMUTE_MIN_DATE
		  FROM
		      COMMUTE
	     WHERE
			  1 = 1
		   AND
			  member_id = #{id}
    </select>
    
    <select id="getMyAttendanceHistory" resultType="map">
    <!-- getMyAttendanceHistory 지각/조퇴/결근 기록 조회 -->
		SELECT 
			  b.*
		  FROM (
			  SELECT 
					a.*
				  , ROW_NUMBER() OVER(PARTITION BY ID ORDER BY CT_STARTING_DATE DESC)			AS ROW_NUM
			   FROM (
				   SELECT
				         c.id																	AS ID
				       , c.MEMBER_ID 															AS MEMBER_ID
				       , c.CHECK_IN_TIME														AS CHECK_IN_TIME 	
				       , NVL(c.CHECK_OUT_TIME, '-')												AS CHECK_OUT_TIME
					   , CASE 
					  	     WHEN c.CHECK_IN_TIME > ct.CHECK_IN_TIME 				THEN '지각' 
					         WHEN c.CHECK_OUT_TIME <![CDATA[<]]> ct.CHECK_OUT_TIME 	THEN '조퇴' 
					         ELSE '정상출근'
					     END																	AS ATTENDANCE_TEXT
					       , c.CREATE_DATE 														AS CREATE_DATE
					       , ct.STARTING_DATE 													AS CT_STARTING_DATE
					       , ct.CHECK_IN_TIME 													AS CT_CHECK_IN_TIME
						   , ct.CHECK_OUT_TIME 													AS CT_CHECK_OUT_TIME
				     FROM
				         COMMUTE											c
				         INNER JOIN COMMUTE_TIME 							ct 
				      		     ON c.CHECK_IN_DATE >= ct.STARTING_DATE
				    WHERE
				         1 = 1
				      AND
				         c.member_id = #{id}
				    ORDER BY 
				         c.CHECK_IN_DATE DESC
			) a
			ORDER BY
			 	 CREATE_DATE DESC
		) b
		 WHERE
		 	  1 = 1
		   AND
		 	  ROW_NUM = 1
	 	  <if test='startDate != null and startDate != ""
			 		and endDate != null and endDate != ""'>
			  AND 
				 CREATE_DATE BETWEEN #{startDate} 
								 AND #{endDate} 
		  </if>
    </select>
    
    <select id="getMyAttendanceHistoryDonutChart" resultType="map">
    <!-- getMyAttendanceHistoryDonutChart 지각/조퇴/결근 기록 조회 -->
		SELECT
		  	  c.ATTENDANCE_TEXT
		    , COUNT(c.ATTENDANCE_TEXT)	AS PIE_CHART_VALUE
		  FROM (
			    SELECT 
					  b.*
				  FROM (
					  SELECT 
							a.*
						  , ROW_NUMBER() OVER(PARTITION BY ID ORDER BY CT_STARTING_DATE DESC)			AS ROW_NUM
					   FROM (
						   SELECT
						         c.id																	AS ID
						       , c.MEMBER_ID 															AS MEMBER_ID
						       , c.CHECK_IN_TIME														AS CHECK_IN_TIME 	
						       , NVL(c.CHECK_OUT_TIME, '-')												AS CHECK_OUT_TIME
							   , CASE 
							  	     WHEN c.CHECK_IN_TIME > ct.CHECK_IN_TIME				THEN '지각' 
							         WHEN c.CHECK_OUT_TIME <![CDATA[<]]> ct.CHECK_OUT_TIME 	THEN '조퇴' 
							         ELSE '정상출근'
							     END																	AS ATTENDANCE_TEXT
							       , c.CREATE_DATE 														AS CREATE_DATE
							       , ct.STARTING_DATE 													AS CT_STARTING_DATE
							       , ct.CHECK_IN_TIME 													AS CT_CHECK_IN_TIME
								   , ct.CHECK_OUT_TIME 													AS CT_CHECK_OUT_TIME
						     FROM
						         COMMUTE											c
						         INNER JOIN COMMUTE_TIME 							ct 
						      		     ON c.CHECK_IN_DATE >= ct.STARTING_DATE
						    WHERE
						         1 = 1
						      AND
						         c.member_id = #{id}
						    ORDER BY 
						         c.CHECK_IN_DATE DESC
					) a
					ORDER BY
					 	 CREATE_DATE DESC
				) b
				 WHERE
				 	  1 = 1
				   AND
				 	  ROW_NUM = 1
			 	  <if test='startDate != null and startDate != ""
					 		and endDate != null and endDate != ""'>
					  AND 
						 CREATE_DATE BETWEEN #{startDate} 
										 AND #{endDate} 
				  </if>
		 	 )  c
		 GROUP BY
 			  ATTENDANCE_TEXT
    </select>
    
    <select id="getMyCommuteTimeMinMaxDate" resultType="map">
    <!-- getMyCommuteHistoryMinMaxDate 출퇴근기록에서 최대최소일 조회 -->
		SELECT 
		     MAX(STARTING_DATE)		AS MAX_STARTING_DATE
		   , MIN(STARTING_DATE) 	AS MIN_STARTING_DATE
		 FROM
		     COMMUTE_TIME
		WHERE
		  	 1 = 1
		  AND
		  	 member_id = #{id}
    </select>
    
    <select id="getMyCommuteTime" resultType="map">
    <!-- getMyCommuteTime 내 출퇴근 기준 시간 조회 -->
		SELECT
		  	  CHECK_IN_TIME 	AS CHECK_IN_TIME
			, CHECK_OUT_TIME 	AS CHECK_OUT_TIME
			, STARTING_DATE 	AS STARTING_DATE
	  	  FROM 
		 	  COMMUTE_TIME
		 WHERE
		  	  1 = 1
		   AND
		  	  member_id = #{id}
	  	  <if test='startDate != null and startDate != ""
   			 		and endDate != null and endDate != ""'>
			  AND 
				  STARTING_DATE BETWEEN #{startDate} 
									AND #{endDate} 
		  </if>
  	     ORDER BY
 	  		  STARTING_DATE DESC
    </select>

</mapper>