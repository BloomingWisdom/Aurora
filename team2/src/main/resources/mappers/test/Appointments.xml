<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.repository.AppointmentsMapper">

    <select id="getAppointList" parameterType="map" resultType="map">
		SELECT
		mh.ASSIGNMENT_TYPE AS ASSIGNMENT_TYPE,
		TO_CHAR(mh.CHANGE_DATE, 'YYYY-MM-DD') AS CHANGE_DATE,
		mh.MEMBER_ID AS MEMBER_ID,
		m.NAME AS NAME,
		mh.OLD_GRADE AS OLD_GRADE,
		mh.NEW_GRADE AS NEW_GRADE,
		mh.OLD_DEPT AS OLD_DEPT,
		mh.NEW_DEPT AS NEW_DEPT,
		mh.ETC AS ETC
		FROM MEMBER_HISTORY mh
		LEFT JOIN MEMBER m
		ON mh.member_id = m.member_id
		WHERE 1=1
	<if test="startDate != null and startDate != ''">
		AND mh.change_date <![CDATA[>=]]>
		#{startDate}
	</if>
	<if test="endDate != null and endDate != ''">
		AND mh.change_date <![CDATA[<=]]>
		#{endDate}
	</if>
	<if test="appointGubun != null and appointGubun != ''">
		AND mh.assignment_type = #{appointGubun}
	</if>
    </select>

    <select id="getMinMaxDate" resultType="map">
        SELECT 
            TO_CHAR(NVL(MIN(CHANGE_DATE), TO_DATE('2024-01-01', 'YYYY-MM-DD')), 'YYYY-MM-DD') AS minDate,
            TO_CHAR(NVL(MAX(CHANGE_DATE), SYSDATE), 'YYYY-MM-DD') AS maxDate
        FROM MEMBER_HISTORY
    </select>
    
 	<!-- 모든 부서 조회 -->
    <select id="getAllDepartments" resultType="map">
        SELECT 
            CODE_ID AS codeId,
            CODE_NAME AS codeName
        FROM 
            COMMON_CODE
        WHERE 
            GROUP_ID = 'DEP'
            AND USE_YN = 'Y'
        ORDER BY codeName ASC
    </select>
    
    <!-- 모든 직급 조회 -->
    <select id="getAllRanks" resultType="map">
    	SELECT
    		CODE_ID AS codeId,
    		CODE_NAME AS codeName
   		FROM
   			COMMON_CODE
		WHERE
			GROUP_ID = 'RANK'
			AND USE_YN = 'Y'	
		ORDER BY codeName ASC     		
    </select>
    
   <select id="getOrgTree" resultType="map">
	    SELECT 
	        d.CODE_ID AS deptId,
	        d.CODE_NAME AS deptName,
	        e.MEMBER_ID AS memberId,
	        e.NAME AS memberName,
	        g.CODE_NAME AS gradeName
	    FROM 
	        COMMON_CODE d
	    LEFT JOIN 
	        MEMBER e ON (d.CODE_ID = e.DEPT_ID)
	    LEFT JOIN 
	        COMMON_CODE g ON (e.GRADE_ID = g.CODE_ID AND g.GROUP_ID = 'RANK')
	    WHERE 
	        d.GROUP_ID = 'DEP'
	      AND d.USE_YN = 'Y'
	      AND (e.USE_YN = 'Y' OR e.USE_YN IS NULL)
	    ORDER BY 
	        d.CODE_ID, g.CODE_NAME, e.NAME
	</select>

    
</mapper>
